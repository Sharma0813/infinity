{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amans\\\\OneDrive\\\\Desktop\\\\Project\\\\infinite\\\\infinite-scroll\\\\src\\\\infiniteScroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport './infiniteScroll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteScroll = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const loader = useRef(null);\n  const fetchMoreItems = useCallback(async () => {\n    await new Promise(res => setTimeout(res, 1000));\n    const newItems = Array.from({\n      length: 10\n    }, (_, i) => `Item ${i + 1 + (page - 1) * 10}`);\n    setItems(prev => [...prev, ...newItems]);\n    if (page >= 5) {\n      setHasMore(false);\n    } else {\n      setPage(prev => prev + 1);\n    }\n  }, [page]);\n  useEffect(() => {\n    fetchMoreItems();\n  }, [fetchMoreItems]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasMore) {\n        fetchMoreItems();\n      }\n    }, {\n      root: null,\n      rootMargin: '20px',\n      threshold: 1.0\n    });\n    const currentLoader = loader.current;\n    if (currentLoader) {\n      observer.observe(currentLoader);\n    }\n    return () => {\n      if (currentLoader) observer.unobserve(currentLoader);\n    };\n  }, [hasMore, fetchMoreItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loader,\n      className: \"loader\",\n      children: hasMore ? 'Loading more items...' : 'No more items to load.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteScroll, \"N3WhD+UMr/obOTyUQ4zOKDcGMQM=\");\n_c = InfiniteScroll;\nexport default InfiniteScroll;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScroll\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","InfiniteScroll","_s","items","setItems","hasMore","setHasMore","page","setPage","loader","fetchMoreItems","Promise","res","setTimeout","newItems","Array","from","length","_","i","prev","observer","IntersectionObserver","entry","isIntersecting","root","rootMargin","threshold","currentLoader","current","observe","unobserve","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","_c","$RefreshReg$"],"sources":["C:/Users/amans/OneDrive/Desktop/Project/infinite/infinite-scroll/src/infiniteScroll.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport './infiniteScroll.css';\r\n\r\nconst InfiniteScroll = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const loader = useRef(null);\r\n\r\n  const fetchMoreItems = useCallback(async () => {\r\n    await new Promise((res) => setTimeout(res, 1000));\r\n\r\n    const newItems = Array.from({ length: 10 }, (_, i) => `Item ${i + 1 + (page - 1) * 10}`);\r\n    setItems((prev) => [...prev, ...newItems]);\r\n\r\n    if (page >= 5) {\r\n      setHasMore(false);\r\n    } else {\r\n      setPage((prev) => prev + 1);\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    fetchMoreItems();\r\n  }, [fetchMoreItems]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting && hasMore) {\r\n          fetchMoreItems();\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: '20px',\r\n        threshold: 1.0,\r\n      }\r\n    );\r\n\r\n    const currentLoader = loader.current;\r\n    if (currentLoader) {\r\n      observer.observe(currentLoader);\r\n    }\r\n\r\n    return () => {\r\n      if (currentLoader) observer.unobserve(currentLoader);\r\n    };\r\n  }, [hasMore, fetchMoreItems]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {items.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      <div ref={loader} className=\"loader\">\r\n        {hasMore ? 'Loading more items...' : 'No more items to load.'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}